end of importing
x is [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 1]
 [0 0 0 ... 0 1 0]
 ...
 [1 1 1 ... 1 0 1]
 [1 1 1 ... 1 1 0]
 [1 1 1 ... 1 1 1]]
x shape is (65536, 16)
y is [0 1 1 ... 1 1 0]
y shape is (65536,)
x_train:  (10000, 16)
y_train:  (10000,)
Y train is [[1. 0.]
 [0. 1.]
 [0. 1.]
 ...
 [0. 1.]
 [1. 0.]
 [0. 1.]]
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
dense (Dense)                (None, 2)                 34        
=================================================================
Total params: 34
Trainable params: 34
Non-trainable params: 0
_________________________________________________________________
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
dense (Dense)                (None, 2)                 34        
=================================================================
Total params: 34
Trainable params: 34
Non-trainable params: 0
_________________________________________________________________
None
Epoch 1/5
79/79 - 1s - loss: 0.7747 - accuracy: 0.5414 - val_loss: 0.7414 - val_accuracy: 0.5802
Epoch 2/5
79/79 - 0s - loss: 0.7294 - accuracy: 0.5947 - val_loss: 0.7180 - val_accuracy: 0.5939
Epoch 3/5
79/79 - 0s - loss: 0.7076 - accuracy: 0.6028 - val_loss: 0.6977 - val_accuracy: 0.6074
Epoch 4/5
79/79 - 0s - loss: 0.6888 - accuracy: 0.6133 - val_loss: 0.6811 - val_accuracy: 0.6183
Epoch 5/5
79/79 - 0s - loss: 0.6738 - accuracy: 0.6254 - val_loss: 0.6681 - val_accuracy: 0.6334
<keras.callbacks.History object at 0x7f87dd021580>
test score: 0.6681273579597473
test accuracy: 0.633372962474823
Epoch 1/10
79/79 - 0s - loss: 0.6625 - accuracy: 0.6398 - val_loss: 0.6586 - val_accuracy: 0.6447
Epoch 2/10
79/79 - 0s - loss: 0.6544 - accuracy: 0.6494 - val_loss: 0.6519 - val_accuracy: 0.6566
Epoch 3/10
79/79 - 0s - loss: 0.6485 - accuracy: 0.6611 - val_loss: 0.6472 - val_accuracy: 0.6621
Epoch 4/10
79/79 - 0s - loss: 0.6446 - accuracy: 0.6653 - val_loss: 0.6441 - val_accuracy: 0.6659
Epoch 5/10
79/79 - 0s - loss: 0.6417 - accuracy: 0.6679 - val_loss: 0.6419 - val_accuracy: 0.6664
Epoch 6/10
79/79 - 0s - loss: 0.6398 - accuracy: 0.6682 - val_loss: 0.6405 - val_accuracy: 0.6664
Epoch 7/10
79/79 - 0s - loss: 0.6385 - accuracy: 0.6682 - val_loss: 0.6397 - val_accuracy: 0.6664
Epoch 8/10
79/79 - 0s - loss: 0.6378 - accuracy: 0.6682 - val_loss: 0.6389 - val_accuracy: 0.6664
Epoch 9/10
79/79 - 0s - loss: 0.6370 - accuracy: 0.6682 - val_loss: 0.6385 - val_accuracy: 0.6664
Epoch 10/10
79/79 - 0s - loss: 0.6365 - accuracy: 0.6682 - val_loss: 0.6383 - val_accuracy: 0.6664
<keras.callbacks.History object at 0x7f87bee9c250>
test score: 0.63826984167099
test accuracy: 0.6663785576820374
** Теперь построим и обучим сеть с 20000 ед. выборки **
Epoch 1/10
157/157 - 0s - loss: 0.5724 - accuracy: 0.8831 - val_loss: 0.4836 - val_accuracy: 0.9984
Epoch 2/10
157/157 - 0s - loss: 0.4354 - accuracy: 0.9995 - val_loss: 0.3941 - val_accuracy: 1.0000
Epoch 3/10
157/157 - 0s - loss: 0.3631 - accuracy: 1.0000 - val_loss: 0.3352 - val_accuracy: 1.0000
Epoch 4/10
157/157 - 0s - loss: 0.3122 - accuracy: 1.0000 - val_loss: 0.2912 - val_accuracy: 1.0000
Epoch 5/10
157/157 - 0s - loss: 0.2731 - accuracy: 1.0000 - val_loss: 0.2564 - val_accuracy: 1.0000
Epoch 6/10
157/157 - 0s - loss: 0.2417 - accuracy: 1.0000 - val_loss: 0.2279 - val_accuracy: 1.0000
Epoch 7/10
157/157 - 0s - loss: 0.2156 - accuracy: 1.0000 - val_loss: 0.2041 - val_accuracy: 1.0000
Epoch 8/10
157/157 - 0s - loss: 0.1935 - accuracy: 1.0000 - val_loss: 0.1837 - val_accuracy: 1.0000
Epoch 9/10
157/157 - 0s - loss: 0.1746 - accuracy: 1.0000 - val_loss: 0.1661 - val_accuracy: 1.0000
Epoch 10/10
157/157 - 0s - loss: 0.1582 - accuracy: 1.0000 - val_loss: 0.1507 - val_accuracy: 1.0000
<keras.callbacks.History object at 0x7f87dcff3be0>
** Модель с двухслойным персептроном ** 

Model: "sequential_1"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
dense_1 (Dense)              (None, 8)                 136       
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 18        
=================================================================
Total params: 154
Trainable params: 154
Non-trainable params: 0
_________________________________________________________________
None
** Обучаем модель с двухслойным персептроном ** 

Epoch 1/10
157/157 - 1s - loss: 0.6021 - accuracy: 0.6993 - val_loss: 0.4576 - val_accuracy: 0.8724
Epoch 2/10
157/157 - 0s - loss: 0.3208 - accuracy: 0.9665 - val_loss: 0.1998 - val_accuracy: 0.9998
Epoch 3/10
157/157 - 0s - loss: 0.1338 - accuracy: 1.0000 - val_loss: 0.0855 - val_accuracy: 1.0000
Epoch 4/10
157/157 - 0s - loss: 0.0612 - accuracy: 1.0000 - val_loss: 0.0433 - val_accuracy: 1.0000
Epoch 5/10
157/157 - 0s - loss: 0.0332 - accuracy: 1.0000 - val_loss: 0.0254 - val_accuracy: 1.0000
Epoch 6/10
157/157 - 0s - loss: 0.0204 - accuracy: 1.0000 - val_loss: 0.0164 - val_accuracy: 1.0000
Epoch 7/10
157/157 - 0s - loss: 0.0136 - accuracy: 1.0000 - val_loss: 0.0113 - val_accuracy: 1.0000
Epoch 8/10
157/157 - 0s - loss: 0.0097 - accuracy: 1.0000 - val_loss: 0.0082 - val_accuracy: 1.0000
Epoch 9/10
157/157 - 0s - loss: 0.0072 - accuracy: 1.0000 - val_loss: 0.0062 - val_accuracy: 1.0000
Epoch 10/10
157/157 - 0s - loss: 0.0055 - accuracy: 1.0000 - val_loss: 0.0048 - val_accuracy: 1.0000
<keras.callbacks.History object at 0x7f87beeb1700>

end of importing
x is [[0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 1]
 [0 0 0 ... 0 1 0]
 ...
 [1 1 1 ... 1 0 1]
 [1 1 1 ... 1 1 0]
 [1 1 1 ... 1 1 1]]
x shape is (65536, 16)
y is [0 1 1 ... 1 1 0]
y shape is (65536,)
x_train:  (10000, 16)
y_train:  (10000,)
Y train is [[1. 0.]
 [0. 1.]
 [0. 1.]
 ...
 [0. 1.]
 [1. 0.]
 [0. 1.]]
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
dense (Dense)                (None, 2)                 34        
=================================================================
Total params: 34
Trainable params: 34
Non-trainable params: 0
_________________________________________________________________
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
dense (Dense)                (None, 2)                 34        
=================================================================
Total params: 34
Trainable params: 34
Non-trainable params: 0
_________________________________________________________________
None
Epoch 1/5
79/79 - 1s - loss: 0.6900 - accuracy: 0.6255 - val_loss: 0.6789 - val_accuracy: 0.6270
Epoch 2/5
79/79 - 0s - loss: 0.6712 - accuracy: 0.6344 - val_loss: 0.6647 - val_accuracy: 0.6390
Epoch 3/5
79/79 - 0s - loss: 0.6593 - accuracy: 0.6463 - val_loss: 0.6551 - val_accuracy: 0.6505
Epoch 4/5
79/79 - 0s - loss: 0.6513 - accuracy: 0.6575 - val_loss: 0.6495 - val_accuracy: 0.6607
Epoch 5/5
79/79 - 0s - loss: 0.6462 - accuracy: 0.6638 - val_loss: 0.6456 - val_accuracy: 0.6636
<keras.callbacks.History object at 0x7fcbb1562880>
test score: 0.6456086039543152
test accuracy: 0.6635515689849854
Epoch 1/10
79/79 - 0s - loss: 0.6431 - accuracy: 0.6671 - val_loss: 0.6429 - val_accuracy: 0.6660
Epoch 2/10
79/79 - 0s - loss: 0.6408 - accuracy: 0.6680 - val_loss: 0.6414 - val_accuracy: 0.6663
Epoch 3/10
79/79 - 0s - loss: 0.6395 - accuracy: 0.6683 - val_loss: 0.6404 - val_accuracy: 0.6664
Epoch 4/10
79/79 - 0s - loss: 0.6386 - accuracy: 0.6682 - val_loss: 0.6398 - val_accuracy: 0.6664
Epoch 5/10
79/79 - 0s - loss: 0.6379 - accuracy: 0.6682 - val_loss: 0.6395 - val_accuracy: 0.6664
Epoch 6/10
79/79 - 0s - loss: 0.6377 - accuracy: 0.6682 - val_loss: 0.6391 - val_accuracy: 0.6664
Epoch 7/10
79/79 - 0s - loss: 0.6372 - accuracy: 0.6682 - val_loss: 0.6388 - val_accuracy: 0.6664
Epoch 8/10
79/79 - 0s - loss: 0.6370 - accuracy: 0.6682 - val_loss: 0.6392 - val_accuracy: 0.6664
Epoch 9/10
79/79 - 0s - loss: 0.6368 - accuracy: 0.6682 - val_loss: 0.6385 - val_accuracy: 0.6664
Epoch 10/10
79/79 - 0s - loss: 0.6367 - accuracy: 0.6682 - val_loss: 0.6386 - val_accuracy: 0.6664
<keras.callbacks.History object at 0x7fcbb1f13760>
test score: 0.6385692358016968
test accuracy: 0.6663785576820374
** Теперь построим и обучим сеть с 20000 ед. выборки **
Epoch 1/10
157/157 - 0s - loss: 0.5720 - accuracy: 0.8894 - val_loss: 0.4846 - val_accuracy: 0.9998
Epoch 2/10
157/157 - 0s - loss: 0.4362 - accuracy: 0.9999 - val_loss: 0.3949 - val_accuracy: 1.0000
Epoch 3/10
157/157 - 0s - loss: 0.3636 - accuracy: 1.0000 - val_loss: 0.3359 - val_accuracy: 1.0000
Epoch 4/10
157/157 - 0s - loss: 0.3126 - accuracy: 1.0000 - val_loss: 0.2915 - val_accuracy: 1.0000
Epoch 5/10
157/157 - 0s - loss: 0.2733 - accuracy: 1.0000 - val_loss: 0.2565 - val_accuracy: 1.0000
Epoch 6/10
157/157 - 0s - loss: 0.2418 - accuracy: 1.0000 - val_loss: 0.2280 - val_accuracy: 1.0000
Epoch 7/10
157/157 - 0s - loss: 0.2157 - accuracy: 1.0000 - val_loss: 0.2041 - val_accuracy: 1.0000
Epoch 8/10
157/157 - 0s - loss: 0.1936 - accuracy: 1.0000 - val_loss: 0.1837 - val_accuracy: 1.0000
Epoch 9/10
157/157 - 0s - loss: 0.1747 - accuracy: 1.0000 - val_loss: 0.1661 - val_accuracy: 1.0000
Epoch 10/10
157/157 - 0s - loss: 0.1582 - accuracy: 1.0000 - val_loss: 0.1508 - val_accuracy: 1.0000
<keras.callbacks.History object at 0x7fcbb15253d0>
** Модель с двухслойным персептроном ** 

Model: "sequential_1"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
dense_1 (Dense)              (None, 8)                 136       
_________________________________________________________________
dense_2 (Dense)              (None, 2)                 18        
=================================================================
Total params: 154
Trainable params: 154
Non-trainable params: 0
_________________________________________________________________
None
** Обучаем модель с двухслойным персептроном ** 

Epoch 1/10
157/157 - 0s - loss: 0.6625 - accuracy: 0.6045 - val_loss: 0.4895 - val_accuracy: 0.8099
Epoch 2/10
157/157 - 0s - loss: 0.3089 - accuracy: 0.9502 - val_loss: 0.1605 - val_accuracy: 1.0000
Epoch 3/10
157/157 - 0s - loss: 0.1027 - accuracy: 1.0000 - val_loss: 0.0644 - val_accuracy: 1.0000
Epoch 4/10
157/157 - 0s - loss: 0.0469 - accuracy: 1.0000 - val_loss: 0.0338 - val_accuracy: 1.0000
Epoch 5/10
157/157 - 0s - loss: 0.0263 - accuracy: 1.0000 - val_loss: 0.0204 - val_accuracy: 1.0000
Epoch 6/10
157/157 - 0s - loss: 0.0166 - accuracy: 1.0000 - val_loss: 0.0135 - val_accuracy: 1.0000
Epoch 7/10
157/157 - 0s - loss: 0.0113 - accuracy: 1.0000 - val_loss: 0.0095 - val_accuracy: 1.0000
Epoch 8/10
157/157 - 0s - loss: 0.0082 - accuracy: 1.0000 - val_loss: 0.0070 - val_accuracy: 1.0000
Epoch 9/10
157/157 - 0s - loss: 0.0061 - accuracy: 1.0000 - val_loss: 0.0053 - val_accuracy: 1.0000
Epoch 10/10
157/157 - 0s - loss: 0.0047 - accuracy: 1.0000 - val_loss: 0.0042 - val_accuracy: 1.0000
<keras.callbacks.History object at 0x7fcbb1996910>
